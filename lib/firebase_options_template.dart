// TEMPLATE FILE - DO NOT COMMIT WITH REAL API KEYS
// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// SECURITY WARNING: This file contains API keys and should not be committed to version control.
/// 1. Replace the placeholder values below with your actual Firebase configuration
/// 2. Make sure this file is listed in .gitignore
/// 3. Generate new API keys in Firebase Console as the old ones may be compromised
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // REPLACE THESE PLACEHOLDER VALUES WITH YOUR ACTUAL FIREBASE CONFIG
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'YOUR_WEB_API_KEY_HERE', // Replace with your actual Web API key
    appId: 'YOUR_WEB_APP_ID_HERE', // Replace with your actual Web App ID
    messagingSenderId:
        'YOUR_SENDER_ID_HERE', // Replace with your actual Sender ID
    projectId: 'YOUR_PROJECT_ID_HERE', // Replace with your actual Project ID
    authDomain: 'YOUR_AUTH_DOMAIN_HERE', // Replace with your actual Auth domain
    storageBucket:
        'YOUR_STORAGE_BUCKET_HERE', // Replace with your actual Storage bucket
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey:
        'YOUR_ANDROID_API_KEY_HERE', // Replace with your actual Android API key
    appId:
        'YOUR_ANDROID_APP_ID_HERE', // Replace with your actual Android App ID
    messagingSenderId:
        'YOUR_SENDER_ID_HERE', // Replace with your actual Sender ID
    projectId: 'YOUR_PROJECT_ID_HERE', // Replace with your actual Project ID
    storageBucket:
        'YOUR_STORAGE_BUCKET_HERE', // Replace with your actual Storage bucket
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY_HERE', // Replace with your actual iOS API key
    appId: 'YOUR_IOS_APP_ID_HERE', // Replace with your actual iOS App ID
    messagingSenderId:
        'YOUR_SENDER_ID_HERE', // Replace with your actual Sender ID
    projectId: 'YOUR_PROJECT_ID_HERE', // Replace with your actual Project ID
    storageBucket:
        'YOUR_STORAGE_BUCKET_HERE', // Replace with your actual Storage bucket
    iosBundleId:
        'YOUR_IOS_BUNDLE_ID_HERE', // Replace with your actual iOS Bundle ID
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey:
        'YOUR_WEB_API_KEY_HERE', // Replace with your actual Web API key (same as web)
    appId:
        'YOUR_WINDOWS_APP_ID_HERE', // Replace with your actual Windows App ID
    messagingSenderId:
        'YOUR_SENDER_ID_HERE', // Replace with your actual Sender ID
    projectId: 'YOUR_PROJECT_ID_HERE', // Replace with your actual Project ID
    authDomain: 'YOUR_AUTH_DOMAIN_HERE', // Replace with your actual Auth domain
    storageBucket:
        'YOUR_STORAGE_BUCKET_HERE', // Replace with your actual Storage bucket
  );
}
